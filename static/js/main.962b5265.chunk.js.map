{"version":3,"sources":["Components/Filter/Filter.module.css","App.module.css","redux/actions-types.js","redux/reducer.js","redux/store.js","redux/actions.js","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.jsx","App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","ADD_CONTACT","FILTER_CONTACT","DELETE_CONTACT","items","createReducer","state","action","some","contact","name","toLowerCase","payload","alert","filter","id","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contacts","persistReducer","reducerPhonebook","store","configureStore","reducer","devtools","process","persistor","persistStore","addContact","createAction","text","shortid","generate","completed","filterContact","deleteContact","getVisisbleContacts","allContacts","normoliseFilter","console","log","includes","connect","dispatch","onDeleteContacts","className","s","map","number","item","tel","btnDel","onClick","value","onChange","event","currentTarget","label","type","pattern","title","required","input","onSubmit","useState","setName","setNumber","handleChange","form","preventDefault","btnAdd","App","app","titleContacts","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.962b5265.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__RscGM\",\"label\":\"Filter_label__2RnAU\",\"text\":\"Filter_text__2OR9q\",\"input\":\"Filter_input__BEGnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__29HOm\",\"title\":\"App_title__3mD07\",\"titleContacts\":\"App_titleContacts__2u5r2\"};","export const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const FILTER_CONTACT = 'GET_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './actions-types';\n//import { actions } from './actions';\n\n//---------------------------------через toolkit---------------------------------\nconst items = createReducer([], {\n  //* ----------добавить контакт------------\n  [ADD_CONTACT]: (state, action) => {\n    if (\n      state.some(\n        contact =>\n          contact.name.toLowerCase() === action.payload.name.toLowerCase(),\n      )\n    ) {\n      alert(`This contact already exists`);\n      return;\n    }\n    return [...state, action.payload];\n  },\n\n  //* ---------удалить контакт------------\n  [DELETE_CONTACT]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\n//* ---------фильтр контакта------------\nconst filter = createReducer('', {\n  [FILTER_CONTACT]: (_, action) => action.payload,\n});\n\nexport default combineReducers({ items, filter });\n\n//-----------------------------------через 'redux';----------------------------------------------------\n\n// const items = (state = [], action) => {\n//   switch (action.type) {\n//     case ADD_CONTACT:\n//       return [...state, action.payload];\n\n//     case DELETE_CONTACT:\n//       return state.filter((contact) => contact.id !== action.payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', action) => {\n//   switch (action.type) {\n//     case FILTER_CONTACT:\n//       return  action.payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n//export default combineReducers({ items, filter });\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\n\nimport reducerPhonebook from './reducer';\n\nconst contactsPersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['filter'],\n};\n\n//---------------------------------через toolkit---------------------------------\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(contactsPersistConfig, reducerPhonebook),\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devtools: process.env.NODE_ENV !== 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n\n//-----------------------------------через import { createStore } from 'redux';----------------------------------------------------\n\n// export const store = createStore(\n//   reducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n// );\n","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './actions-types';\r\n\r\n//---------------------------------через toolkit---------------------------------\r\nexport const addContact = createAction(ADD_CONTACT, text => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      ...text,\r\n      completed: false,\r\n    }\r\n  }\r\n});\r\n\r\nexport const filterContact = createAction(FILTER_CONTACT);\r\n\r\nexport const deleteContact = createAction(DELETE_CONTACT);\r\n\r\n//-----------------------------------через 'redux';----------------------------------------------------\r\n// export function addContact(text) {\r\n//   return { type: ADD_CONTACT, payload: { id: shortid.generate(), ...text } };\r\n// }\r\n\r\n// export function filterContact(name) {\r\n//   return { type: FILTER_CONTACT, payload:  name  };\r\n// }\r\n\r\n// export function deleteContact(id) {\r\n//   return { type: DELETE_CONTACT, payload: id };\r\n// }\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={s.contacts}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.item} key={id}>\n        <p className={s.name}>{name}</p>\n        <p className={s.tel}>{number}</p>\n        <button className={s.btnDel} onClick={() => onDeleteContacts(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\n//-----------------поиск по фильтру\nconst getVisisbleContacts = (allContacts, filter) => {\n  const normoliseFilter = filter.toLowerCase();\n\n  console.log(allContacts);\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normoliseFilter),\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisisbleContacts(state.contacts.items, state.contacts.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n//-----------------другой вариант записи mapStateToProps\n// const mapStateToProps = state => {\n//   const { filter, items } = state;\n//   const visibilContacts = getVisisbleContacts(items, filter);\n\n//   return { contacts: visibilContacts };\n// };\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { filterContact } from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filter}>\n    <label className={s.label}>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(filterContact(event.currentTarget.value)),\n});\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\n//import {  useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/actions';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  //ввод в интпут\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  //-----------другой вариант записи handleChange------------\n  // const handleNameChange = event => {\n  //   setName(event.currentTarget.value);\n  // };\n  // const handleNumberChange = event => {\n  //   setNumber(event.currentTarget.value);\n  // };\n\n  //добавить контакт через кнопку\n  const handleSabmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSabmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <button type=\"sabmit\" className={s.btnAdd}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(addContact(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","//Components\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport ContactForm from './Components/ContactForm/ContactForm';\n\nimport s from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2 className={s.titleContacts}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__S4K-P\",\"label\":\"ContactForm_label__3CxZe\",\"input\":\"ContactForm_input__1CExF\",\"btnAdd\":\"ContactForm_btnAdd__aB3X9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__vEQQZ\",\"item\":\"ContactList_item__10F-L\",\"name\":\"ContactList_name__3G2tO\",\"tel\":\"ContactList_tel__1TG3d\",\"btnDel\":\"ContactList_btnDel__3iPGR\"};"],"sourceRoot":""}